
++ replace updateViews with syncToNode?
	++ use DivView.isHandlingEvent()
	
	if (DivView.isHandlingEvent()) {
		
	}
	
BROWSER HEADER:
    - support elipsis in column header title
    
BROWSER:
    TITLE:
        - if single column mode, use a single default column bgColor
        - add a nodeColumnTitle method which defaults to title for single column mode
    PATH:
        - fix hash path to remove first component (the app name)

    ROWS:
    - row delete button not stopping event propogation to select row?
    - use double tap to edit editable text field row title?
    - don't adjust visible column set if a new row selection doesn't require more room (let user use back arrow if they want that)
    - have browserview observe node titles to update window hash path

    - FEATURE: support for reording rows (nodeRowsUserOrderable) like Clear
    - FEATURE: support for white rows with shadow selection (use z-index?)

    - nodeMaxWidth?



BROWSER fitColumns cleanup?
    activeEndColumnsThatFitBrowserWidth
    inactiveEndColumns
    setInactiveEndColumnCount()
    startColumnsToCollapse

DATASTORE:
    - cleanup: avoid writing over (or at least ever storing) existing object instances on read from store?
        - looks like they get stored the first pass and the ones from last time are deleted on next sweep

PANEL:
    - add verify delete panel

FIELDS:
    - add right arrow on note of link field 
    - make tab go to next field?
    FIELD ACTION BUTTONS:
        - move actions to fields with attributes like "isEnabled" and enabledMethod

MESSAGING:
    - fix from address on emails 
    - cleanup message dict format
    - chat threads
    - move contacts under identity
    - add time/date field
    - way to show pubkey when no contact available

IMAGES:
    - image resizing (adjust jpg compression until <= size target)

CLEANUP:
    -- use View postfix consistently

--- DOC NOTES ---------

SYNCING

DB -> MODEL -> VIEW (db loads on start or model access, view loads on access)
DB <- MODEL -> VIEW (model code auto detects changes and calls sync to view and DB)
DB    MODEL <- VIEW (event code explicitly calls sync)

--- FEEDS ---

BMTweet - BMObjectMessage
BMTweetRowView (non fixed height)
peer id: pubkey-bloomFilterOfSubscriptions-syncEstimate




