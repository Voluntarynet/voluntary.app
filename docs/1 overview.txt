
APP OVERVIEW

ABOUT

This project is:
- an in-browser webRTC-based decentralized messaging platform 
- a desktop-like (e.g. AppKit) UI framework in which apps can be built with no templates or html
- a Miller column based scalable, reactive common UI system which automatically works on desktop, tablets and phones
- a naked objects framework which can generate a UI based on model objects (most apps require no UI code)
- an intergrated client-side transparent persistence framework (most apps require developer to declare stored objects and fields)
- a notifications system which automatically synchronizes the UI, model, and persistence
On top of this system, decentralized apps (dapps) can quicky be built with very little code. 
A decentralized Twitter app is included as an example.

FRAMEWORKS

The app is built on integrated naked objects UI and transparent persistence database frameworks. 
These allow the developer to add new model objects without the need to write (almost) any code to interface these objects to the UI or database. 

BASICS

The system is built around the observations: 
    - there tends to be a close correspondence between data, model, and view objects 
    - the structure of the data, model and views can each be well described as hierarchy (with links)
    - synchronization between data, model and views can be generalized and automated
	- an expanding miller column like UI can be generalized to work reactively on most devices
	- form entry and it's mapping to model and data objects can be generalized for most use cases
	

HOW TO USE

Model level objects should subclass the BMNode class. 
If the object will need to persist itself, it should subclass BMStorableNode.



HISTORY

This app started as a port of Bitmarkets Objective-C/OSX implementation to Electron/Javascript in order to support the app across platforms. Bitmarkets is a sort of decentralized ebay which uses Bitcoin for decentralized transactions, Bitmessage for decentralized and secure communications, and 2 party escrow to secure transctions:

    https://voluntary.net/bitmarkets/
    
I made some progress on re-implementing Bitmarket's Miller column based UI and replacing Bitmessage with a webRTC based messaging system but ran into issues with getting a Bitcoin wallet working in JS (e.g. state of stand alone JS Bitcoin implementations). Around this time, I heard about Mastadon (a federated Twitter clone) getting traction and decided it might be worth releasing a decentralized twitter-like app using the existing code first.
	
